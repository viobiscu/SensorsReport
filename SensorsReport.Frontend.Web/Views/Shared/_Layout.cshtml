@inject Serenity.Navigation.INavigationModelFactory NavigationModelFactory
<!DOCTYPE html>
@{
    var hideNav = (string)Context.Request.Query["hideNav"] == "1";
    var themeCookie = Context.Request.Cookies["ProThemeSelection"];
    var theme = themeCookie != null && !string.IsNullOrEmpty(themeCookie) ? themeCookie : "azure-light";
    var bsTheme = theme.EndsWith("-dark", StringComparison.OrdinalIgnoreCase) ? "dark" : "light";
    var rtl = System.Globalization.CultureInfo.CurrentUICulture.TextInfo.IsRightToLeft;
    var sidebarPaneCollapsed = Context?.Request?.Cookies?["SidebarPaneCollapsed"] == "1" ? " s-sidebar-pane-collapsed" : "";
}
<html lang="@System.Globalization.CultureInfo.CurrentUICulture.Name" class="pro theme-@theme@(hideNav ? " no-navigation" : "")" data-bs-theme="@bsTheme"@Html.Raw(rtl ? " dir=\"rtl\"" : "")>
<head>
    <partial name="@MVC.Views.Shared._LayoutHead" />
    @RenderSection("Head", false)
    <title>@(ViewData["Title"]) - SensorsReport</title>
</head>
<body id="s-@(ViewData["PageId"])Page" class="@(ViewData["BodyClass"]) @(sidebarPaneCollapsed)@(rtl ? " rtl" : "")">
<div id="PageBackground" style="display: none"></div>
@if (hideNav)
{
    <script type="module">
        @RenderSection("PageInitScript", false)
    </script>
    <section class="content">
        @RenderBody()
    </section>
}
else
{
    <partial name=@MVC.Views.Shared._Sidebar model=@(NavigationModelFactory.Create()) />
    <main class="s-main">
        <section class="content">
            @if (IsSectionDefined("ContentHeader"))
            {
            <section class="content-header">
                @RenderSection("ContentHeader")
            </section>
            }

            @RenderBody()
        </section>
    </main>
}
</body>
</html>